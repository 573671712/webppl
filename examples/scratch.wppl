//foo(
//  function(h){
//    return function (a){return h(g(a));};
//  }(function(x){return x;})
//);

// and(flip(), flip());

//withContinuation(Forward)(function(){return coroutine.factor(1)})


//var e = withContinuation(fw)(function(){return 12})

//coroutine.sample(withContinuation(Forward)(function(){return coroutine.sample(getbern(), [0.5])}), [0])

//coroutine.sample(getbern(), [0.5])

//sample(fw(function(){return flip(0.5)}))

// var e = cache(function (x){
//     return Enumerate(function() {
//                      var a = and(flip(0.5),flip(0.5));
//                      factor(a? 2 : callPrimitive(Math.log, 0.3));
//                      return and(a,x);
//                      });});

// Enumerate(function(){
//           var e1 = sample(e(true));
//           var e2 = sample(e(true));
//             return and(e1,e2);
//           });


//var e = function(x){return and(x,flip(0.5))}
//var ec = cache(e)
//Enumerate(function(){
//          var e1 = ec(true)
//          var e2 = ec(true)
//          return and(e1,e2)})


// ParticleFilter(
//   function(){
//     var x = flip(0.5);
//     var y = flip(0.5);
//     factor(or(x, y) ? 5 : 1);
//     var z = flip(0.5);
//     factor(or(y, z) ? 5 : 1);
//     return and(and(x, y), z);
//   },
//   100 // particles
// );


//Enumerate(
//  function(){
//    var x = flip(0.2);
//               //factor(x?1:0)
//    var y = flip(0.7);
//    factor(or(x, y) ? 0 : minusInfinity);
//    return x;
//          }//,  100 // particles
//);

// var foo = function() {
//     var a = 1
//     if(a == 2){
//         display("cons")
//         return 1
//     } else {
//         display("alt")
//         return 2
//     }}
// foo()

//a==1?"c":"a"

//randomInteger(5)

// var transition = function(s) {return s?flip(0.7):flip(0.3)}

// var observe = function(s) {return s?flip(0.9):flip(0.1)}


// var hmm_recur = function(n, states, observations){
//     var newstate = transition(states[0])
//     var newobs = observe(newstate)
//     var states = states.concat([newstate])
//     var observations = observations.concat([newobs])
//     factor( newobs == [true, true, true][observations.length] ? 0 : -Infinity) //simplify the two factors
//     return (n==1) ? [states, observations] : hmm_recur(n-1,states,observations)
// }

// var hmm = function(n) {
//     var s = true
//     var observations = [observe(s)]
//     factor(observations[0] == [true, true, true][0] ? 0 : -Infinity) //simplify since we know that observations is length 1
//     return hmm_recur(n,[s],observations)
// }

// ParticleFilter(function(){
//                var r = hmm(2)
//                return r[0]
//                }, 100)

//var xyz = function(){
//  return 3;
//}
//xyz()

//var s = "var a = function(){return 1}; webppl_eval('a()+1', true)"
//webppl_eval(s, true)
//var a = function(){return 1};
//webppl_eval('a()+1', true)

//var makeObj = function() {
//    return [flip(0.3), flip(0.3), flip(0.3)]
//}
//
//var worldPrior = function(objs) {
//    var objs = objs?objs:[]
//    return flip(0.5) ? worldPrior(objs.concat([makeObj()])) : objs
//}
//
//var literalListener = function(utterance) {
//    Enumerate(function(){
//              var world = worldPrior()
//              factor(meaning(utterance, world) ?0:-Infinity)
//              return world
//              }, 100)
//}
//
//literalListener("all objects p1")
//
//
//var binomial = function(){
//    var a = sample(bernoulliERP, [0.5])
//    var b = sample(bernoulliERP, [0.5])
//    var c = sample(bernoulliERP, [0.5])
//    return a & b & c}
//
//var binomialERP = Enumerate(binomial)
//
//binomialERP
//

//var a = {l: 1, m: 2, f: function(){return 3}}
//a.f()

Enumerate(function(){return discrete([0.1, 0.4, 0.1, 0.4])})

