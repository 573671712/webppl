var a0 = 1;
var b0 = 1;
var mu0 = 0;
var lambda0 = 1;

var model1 = function() {

  // Variational parameters.
  var a0Param = sample(deltaERP(1), [], { paramChoice: true });
  var b0Param = sample(deltaERP(1), [], { paramChoice: true });
  var muParam = sample(deltaERP(0), [], { paramChoice: true });
  var precParam = sample(deltaERP(1), [], { paramChoice: true });

  // Variational family/guide.
  // Mean field assumption.
  // Optimal parameters:
  // a = 2.5, b = 2.5, mu = 1, prec = 3
  // https://gist.github.com/null-a/300cd0256b005342b663
  var guideTau = sample(gammaERP, [a0Param, 1 / b0Param], { guideChoice: true });
  var guideMu = sample(gaussianERP, [muParam, 1 / Math.sqrt(precParam)], { guideChoice: true });

  var tau = sample(gammaERP, [a0, 1 / b0], { guideVal: guideTau });
  var mu = sample(gaussianERP, [mu0, 1 / Math.sqrt(lambda0 * tau)], { guideVal: guideMu });

  factor(gaussianERP.score([mu, 1 / Math.sqrt(tau)], 1));
  factor(gaussianERP.score([mu, 1 / Math.sqrt(tau)], 2));


  return mu;
};

var model2 = function() {

  // Variational parameters.
  var aParam = sample(deltaERP(1), [], { paramChoice: true });
  var bParam = sample(deltaERP(1), [], { paramChoice: true });
  var muParam = sample(deltaERP(0), [], { paramChoice: true });
  var precParam = sample(deltaERP(1), [], { paramChoice: true });

  // Variational family/guide.
  // This is a Normal-Gamma which includes the true posterior.
  // Optimal parameters:
  // a = 2, b = 2, mu = 1, prec = 3
  var guideTau = sample(gammaERP, [aParam, 1 / bParam], { guideChoice: true });
  var guideMu = sample(gaussianERP, [muParam, 1 / Math.sqrt(precParam * guideTau)], { guideChoice: true });

  var tau = sample(gammaERP, [a0, 1 / b0], { guideVal: guideTau });
  var mu = sample(gaussianERP, [mu0, 1 / Math.sqrt(lambda0 * tau)], { guideVal: guideMu });

  factor(gaussianERP.score([mu, 1 / Math.sqrt(tau)], 1));
  factor(gaussianERP.score([mu, 1 / Math.sqrt(tau)], 2));

  return mu;
};

Variational(model2, { stepSize: 0.5, steps: 500, samplesPerStep: 100, returnSamples: 20 });

'done!'
